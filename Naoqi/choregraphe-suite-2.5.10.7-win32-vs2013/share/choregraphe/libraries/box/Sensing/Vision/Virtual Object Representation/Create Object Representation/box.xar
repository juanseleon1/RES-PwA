<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheBox xar_version="3">
    <Box name="root" id="5" localization="8" tooltip="This box allows to simply store and remove objects from the world representation.&#x0A;&#x0A;Objects stored in the WorldRepresentation with this box can be visualized in the 3D robot view. See the other World Representation boxes for more details." x="497" y="32">
        <bitmap>media/images/box/world_representation/world_rep.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[class MyClass(GeneratedClass):
    REMOVE_ON_QUIT_STR = "removeOnQuit"

    def __init__(self):
        GeneratedClass.__init__(self)
        try:
            self.wr = ALProxy("ALWorldRepresentation")
        except Exception as e:
            self.onError(e)
        import threading
        self.lock = threading.Lock()

    def onLoad(self):
        self.objects = []
        pass

    def onUnload(self):
        #put clean-up code here
        if self.getParameter(self.REMOVE_ON_QUIT_STR):
            for object in self.objects:
                self.onInput_removeObject(str(object))
        pass

    def onInput_storeObject(self, p):
        objectName = str()
        parentName = "World"
        categoryName = "UserObjects"
        position = [0, 0, 0, 0, 0, 0]
        try:
            if isinstance(p, basestring):
                raise Exception("%s is a string, not a list" % (p))
            objectName = p[0]
            if len(p) >= 2:
                parentName = p[1]
            if len(p) >= 3:
                categoryName = p[2]
            if len(p) == 4:
                position = p[3]
        except Exception as e:
            self.logger.error("onInput_onStart(%s): error in parameters "\
                "(see tooltip for details on expected parameter format)" % (p))
            return
        self.lock.acquire()
        self.createCategory(categoryName)
        self.storeObject(objectName, parentName, categoryName, position)
        self.objects.append(objectName)
        self.storageDone(objectName)
        self.lock.release()

    def onInput_removeObject(self, objectName):
        if not isinstance(objectName, basestring):
            self.logger.error("onInput_removeObject(%s): expected a string" \
                " (see tooltip for details)" % (objectName))
        self.lock.acquire()
        self.removeObject(objectName)
        try:
            self.objects.remove(objectName)
        except:
            pass
        self.removalDone(objectName)
        self.lock.release()

    def createCategory(self, categoryName):
        ret = 0
        try:
            ret = self.wr.createObjectCategory(categoryName, False)
        except Exception as e:
            self.logger.warning("wr.createObjectCategory(%s, %s) error code: %s"
                % (categoryName, False, e))

    def storeObject(self, objectName, parentName, categoryName, position):
        ret = 0
        defaultAttributes = []
        try:
            ret = self.wr.storeObject(objectName, parentName, position, categoryName, defaultAttributes)
        except Exception as e:
            self.logger.warning("wr.storeObject(%s, %s, %s, %s, %s) error: %s"
                % (objectName, parentName, position, categoryName, defaultAttributes, e))

    def removeObject(self, objectName):
        ret = 0
        try:
            ret = self.wr.clearObject(objectName)
        except Exception as e:
            self.logger.warning("wr.clearObject(%s) error: %s" % (objectName, e))]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="storeObject" type="0" type_size="1" nature="1" inner="0" tooltip="Store a new object in the World Representation.&#x0A;The parameters are expected as follows:&#x0A;[ObjectName, (ParentObjectName), (CategoryName), (Position)]&#x0A;&#x0A;ObjectName is a string that identifies the object in the World Representation.&#x0A;&#x0A;ParentObjectName is the string identifier of the parent object in the World Representation. &#x0A;The object will be added in the frame of the parent object.&#x0A;The parent name cannot be changed at runtime.&#x0A;If no value is provided, the object will be added in the default world frame.&#x0A;&#x0A;CategoryName is the string identifying the Category to put the object in.&#x0A;If no value is provided, the object will be added in the &apos;Default&apos; category.&#x0A;&#x0A;Position is a string with the following layout [x, y, z, Wx, Wy, Wz]. It is the position of the object in the frame of its parent.&#x0A;The default value is [0, 0, 0, 0, 0, 0]" id="2" />
        <Input name="removeObject" type="3" type_size="1" nature="1" inner="0" tooltip="Removes an Object identified with the supplied string from the WorldRepresentation." id="3" />
        <Output name="storageDone" type="3" type_size="1" nature="2" inner="0" tooltip="Signal sent when the storage of the given object is finished." id="4" />
        <Output name="removalDone" type="3" type_size="1" nature="2" inner="0" tooltip="Signal sent when the removal of the given object is finished." id="5" />
        <Output name="onError" type="3" type_size="1" nature="2" inner="0" tooltip="Standard onError output." id="6" />
        <Parameter name="removeOnQuit" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Remove the created objects when quitting." id="7" />
    </Box>
</ChoregrapheBox>
