<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheBox xar_version="3">
    <Box name="root" id="1" localization="-1" tooltip="Turn the head in the direction of the greatest movement detected." x="437" y="314">
        <bitmap>media/images/box/tracker/tracker.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[def clip(val, min, max):
        res = val
        if(val < min):
                res = min
        elif(val > max):
                res = max
        return res

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.movementdetection = ALProxy( "ALMovementDetection" )
        self.isRunning = False
        self.previousJointAngles = ALMotion.getAngles("Head", True)
        self.currentJointAngles = ALMotion.getAngles("Head", True)

    def onUnload(self):
        if (self.isRunning):
            ALMemory.unsubscribeToEvent("MovementDetection/MovementDetected", self.getName())
            self.isRunning = False
        pass

    def onInput_onStart(self):
        if (not self.isRunning):
            self.movementdetection.resetDetection()
            ALMemory.subscribeToEvent("MovementDetection/MovementDetected", self.getName(), "tracking", "processEvent")
            self.isRunning = True
        pass

    def onInput_onStop(self):
        if (self.isRunning):
            self.onStopped()
        self.onUnload()
        pass


    def processEvent(self, *_args):
        self.previousJointAngles = self.currentJointAngles
        self.currentJointAngles = ALMotion.getAngles("Head", True)
        sensitivity = self.getParameter("Sensitivity")

        movementInfo = ALMemory.getData("MovementDetection/MovementInfo")
        data = movementInfo[1]

        # To be tracked, a movement must have a ROI bigger than a threshold value that depends on the sensitivity
        minSize = (2+(1-sensitivity)*38)*3.14/180
        # if sensitivity == 1, minSize = 2 degrees // if sensitivity == 0, minSize = 40 degrees

       # Here we decide to track the movement that has the biggest ROI
        max = minSize
        index = -1
        for i in range(0, len(data)):
            if (data[i][1][2] > max):
                max = data[i][1][2]
                index = i
            if (data[i][1][3] > max):
                max = data[i][1][3]
                index = i

        if (index > -1):
            result = data[index][0]
            yaw = self.currentJointAngles[0] +result[0]
            pitch = self.currentJointAngles[1] +result[1]
            yaw = clip( yaw, -1.0, 1.0)
            pitch = clip( pitch, -0.45, 0.10)
            ALMotion.setAngles("Head", [yaw, pitch], 0.1)]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
        <Parameter name="Sensitivity" inherits_from_parent="0" content_type="2" value="0.8" default_value="0.8" min="0" max="1" tooltip="Sets the sensitivity for movement detection. The higher the sensitivity is set, the smaller movements are detected." id="5" />
    </Box>
</ChoregrapheBox>
